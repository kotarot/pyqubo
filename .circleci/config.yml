version: 2
jobs:
  test-2.7: &test-template
    docker:
      - image: circleci/python:2.7-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run:
          name: install python dependencies
          command: |
            . env/bin/activate
            python --version
            pip install -r requirements.txt

      - run:
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            coverage run -m unittest discover

      - run:
          name: codecov
          command: |
            . env/bin/activate
            # skip here when local run
            if ! ([ -z "$CIRCLE_PROJECT_REPONAME" ] || [ -z "$CIRCLE_PROJECT_USERNAME" ]); then
              codecov
            fi

      - run:
          name: test notebooks
          command: |
            . env/bin/activate
            python setup.py install
            find notebooks -name *.ipynb -not -path "*/.ipynb_checkpoints/*" | xargs -L 1 runipy

  test-3.4:
    <<: *test-template
    docker:
      - image: circleci/python:3.4-jessie

  test-3.5:
    <<: *test-template
    docker:
      - image: circleci/python:3.5-jessie

  test-3.6:
    <<: *test-template
    docker:
      - image: circleci/python:3.6-jessie

  test-3.7:
    <<: *test-template
    docker:
      - image: circleci/python:3.7-stretch

  test-doc:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - run:
          name: install graphviz and pandoc
          command: |
            sudo apt-get install graphviz
            sudo apt-get install pandoc

      - checkout

      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env

      - run:
          name: install sphinx and dependencies
          command: |
            . env/bin/activate
            pip install -r requirements.txt
            pip install sphinx
            pip install sphinx_rtd_theme

      - run:
          name: test doc build
          command: |
            . env/bin/activate
            sphinx-build -W -b html docs docs/_build/html

      - run:
          name: run doctest
          command: |
            . env/bin/activate
            make doctest

  deploy:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: create a virtualenv
          command: |
            pip install virtualenv
            python -m virtualenv env

      - run:
          name: install python dependencies
          command: |
            . env/bin/activate
            python --version
            pip install -r requirements.txt

      - run:
          name: build wheels
          command: |
            . env/bin/activate
            python setup.py sdist -d ./dist

      - store_artifacts:
          path: ./dist

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc

            # for testpypi
            #echo -e "repository = https://test.pypi.org/legacy/" >> ~/.pypirc

            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: install twine and deploy
          command: |
            . env/bin/activate
            pip install twine
            twine upload --repository pypi ./dist/*


workflows:
  version: 2
  tests:
    jobs:
      - test-2.7
      - test-3.4
      - test-3.5
      - test-3.6
      - test-3.7
#      - test-doc
#      - deploy:
#          filters:
#            tags:
#              only: /^[0-9](\.[0-9]){2}?/
#            branches:
#              ignore: /.*/
